{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bdp\\\\Desktop\\\\REACT@\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoComponent = () => {\n  _s();\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [url, setUrl] = useState('');\n  const [browserName, setBrowserName] = useState('');\n  const [browserVersion, setBrowserVersion] = useState('');\n  const [os, setOS] = useState('');\n  useEffect(() => {\n    const d = new Date();\n    let day = d.getDate();\n    let month = d.getMonth() + 1;\n    let year = d.getFullYear();\n    setDate(`Data curenta: ${day}/${month}/${year}`);\n    let hour = d.getHours();\n    let minutes = d.getMinutes();\n    setTime(`Ora curenta: ${hour}:${minutes}`);\n    setUrl(`Adresa URL: ${window.location.href}`);\n    setBrowserName(`Numele browser-ului: ${navigator.appName}`);\n    setBrowserVersion(`Versiunea browser-ului: ${navigator.appVersion}`);\n    setOS(`Sistemul de operare folosit: ${navigator.platform}`);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: browserName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: browserVersion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: os\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoComponent, \"7ccz0PmuWfMkuIGb2skQaiAe8tk=\");\n_c = InfoComponent;\nexport default InfoComponent;\nvar _c;\n$RefreshReg$(_c, \"InfoComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","InfoComponent","_s","date","setDate","time","setTime","url","setUrl","browserName","setBrowserName","browserVersion","setBrowserVersion","os","setOS","d","Date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","window","location","href","navigator","appName","appVersion","platform","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bdp/Desktop/REACT@/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst InfoComponent = () => {\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [url, setUrl] = useState('');\n  const [browserName, setBrowserName] = useState('');\n  const [browserVersion, setBrowserVersion] = useState('');\n  const [os, setOS] = useState('');\n\n  useEffect(() => {\n    const d = new Date();\n    let day = d.getDate();\n    let month = d.getMonth() + 1;\n    let year = d.getFullYear();\n    setDate(`Data curenta: ${day}/${month}/${year}`);\n\n    let hour = d.getHours();\n    let minutes = d.getMinutes();\n    setTime(`Ora curenta: ${hour}:${minutes}`);\n\n    setUrl(`Adresa URL: ${window.location.href}`);\n    setBrowserName(`Numele browser-ului: ${navigator.appName}`);\n    setBrowserVersion(`Versiunea browser-ului: ${navigator.appVersion}`);\n    setOS(`Sistemul de operare folosit: ${navigator.platform}`);\n  }, []);\n\n  return (\n    <div>\n      <p>{date}</p>\n      <p>{time}</p>\n      <p>{url}</p>\n      <p>{browserName}</p>\n      <p>{browserVersion}</p>\n      <p>{os}</p>\n    </div>\n  );\n};\n\nexport default InfoComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,EAAE,EAAEC,KAAK,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACd,MAAMkB,CAAC,GAAG,IAAIC,IAAI,CAAC,CAAC;IACpB,IAAIC,GAAG,GAAGF,CAAC,CAACG,OAAO,CAAC,CAAC;IACrB,IAAIC,KAAK,GAAGJ,CAAC,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC;IAC5B,IAAIC,IAAI,GAAGN,CAAC,CAACO,WAAW,CAAC,CAAC;IAC1BlB,OAAO,CAAE,iBAAgBa,GAAI,IAAGE,KAAM,IAAGE,IAAK,EAAC,CAAC;IAEhD,IAAIE,IAAI,GAAGR,CAAC,CAACS,QAAQ,CAAC,CAAC;IACvB,IAAIC,OAAO,GAAGV,CAAC,CAACW,UAAU,CAAC,CAAC;IAC5BpB,OAAO,CAAE,gBAAeiB,IAAK,IAAGE,OAAQ,EAAC,CAAC;IAE1CjB,MAAM,CAAE,eAAcmB,MAAM,CAACC,QAAQ,CAACC,IAAK,EAAC,CAAC;IAC7CnB,cAAc,CAAE,wBAAuBoB,SAAS,CAACC,OAAQ,EAAC,CAAC;IAC3DnB,iBAAiB,CAAE,2BAA0BkB,SAAS,CAACE,UAAW,EAAC,CAAC;IACpElB,KAAK,CAAE,gCAA+BgB,SAAS,CAACG,QAAS,EAAC,CAAC;EAC7D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjC,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,EAAI/B;IAAI;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbtC,OAAA;MAAAkC,QAAA,EAAI7B;IAAI;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbtC,OAAA;MAAAkC,QAAA,EAAI3B;IAAG;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZtC,OAAA;MAAAkC,QAAA,EAAIzB;IAAW;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBtC,OAAA;MAAAkC,QAAA,EAAIvB;IAAc;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBtC,OAAA;MAAAkC,QAAA,EAAIrB;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACpC,EAAA,CAnCID,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}